1.1 모델링
모델의 역할
- 서로의 해석을 공유해 합의를 이루거나 해석의 타당성을 검토한다.
- 현재 시스템 또는 앞으로 개발할 시스템의 원하는 모습을 가시화한다.
- 시스템의 구조와 행위를 명세할 수 있으며 시스템을 구축하는 틀을 제공한다.

모델은 추상화에 바탕을 두고 만들어져야 한다.
목적과 용도에 부합하는 면을 추려서 만들 수 있다.

1.2 UML
모델링을 하기 위해서는 시스템을 모델로 표현해주는 언어가 필요하다 - UML (Unified Modeling Language)

UML 2.0에서 제공하는 다이어그램의 종류
- 구조 다이어그램
  : 클래스 다이어그램, 객체 다이어그램, 복합체 구조 다이어그램, 배치 다이어그램, 컴포넌트 다이어그램, 패키지 다이어그램
- 행위 다이어그램
  : 활동 다이어그램, 상태 머신 다이어그램, 유즈 케이스 다이어그램, 상호작용 다이어그램
** 상호작용 다이어그램
  : 순차 다이어그램, 상호작용 개요 다이어그램, 통신 다이어그램, 타이밍 다이어그램

1.3 클래스 다이어그램
클래스 및 클래스 간의 관계를 보여준다.

1.3.2 관계
연관 관계(Association),
일반화 관계(Generalization),
집합 관계(Composition, Aggregation)
의존 관계(Dependency)
실체화 관계(Realization)

연관 관계
두 클래스가 연관되어 있는 경우를 나타냄.
가령 한 클래스가 다른 클래스의 멤버 변수이거나 그 반대 혹은 둘 다 서로의 멤버 변수인 경우가 해당된다.
실선 화살표로 관계를 표시하며, 양방향일경우 그냥 실선으로만 표시한다.

일대일, 일대다, 다대다 관계가 있으며, 방향에 따라 단방향, 양방향 관계가 있다.
유지보수에는 단방향 관계가 좋으며, 다대다의 경우 양방향으로 연관 관계가 나타나므로 연관 클래스를 만들어 단방향 일대다 관계로 변형할 수 있다.

재귀적 연관 관계도 있는데 관계의 루프를 방지하기 위해 제약을 설정할 수 있다.

일반화 관계
한 클래스가 다른 클래스를 포함하는 상위 개념일 때 일반화 관계가 성립한다. (is a kind of 관계)
빈 화살표 + 실선으로 관계 표시

집합 관계
연관 관계의 특별한 경우.
전체와 부분의 관계를 명확하게 명시하고자 할 때 사용
집약(aggreagtion), 합성(composition)

집약 관계 - 한 객체가 다른 객체를 포함하는 경우. 단, 부분과 전체의 라이프 타임이 서로 독립적이다. 빈 마름모가 전체에 위치함.
           부분 객체를 여러 전체 객체가 공유할 수 있다.
           e.g. 의존성 주입으로 외부에서 부분 객체를 넘겨 받는 경우
합성 관계 - 부분 객체가 전체 객체에 속하는 관계. 단, 부분의 라이프타임은 전체의 그것에 의존한다. 채워진 마름모가 전체에 위치함.
           부분 객체를 여러 전체 객체가 공유할 수 없다.
           e.g. 전체 객체 생성 시 부분 객체가 함께 생성되는 경우..

의존 관계
한 클래스가 다른 클래스를 참조/사용하는데, 짧은 시간동안 이용하는 관계이다.
점선 화살표로 표시한다.

인터페이스와 실체화 관계
인터페이스는 책임을 나타낸다. 특정 객체가 해야할 일이나 할 수 있는 일을 말하며, 공통되는 능력이 있는 것들을 대표하는 관점이기도 하다. (can do this)
인터페이스의 실체화는 빈 삼각형 + 점선으로 표시한다.

